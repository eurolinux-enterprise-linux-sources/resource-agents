From 28084e4b8d1bd54eeb8ffeee379d0c8917b79a46 Mon Sep 17 00:00:00 2001
From: Keisuke MORI <kskmori@intellilink.co.jp>
Date: Tue, 1 Oct 2013 11:05:57 +0900
Subject: [PATCH] High: IPaddr2/findif.sh: Robust parameter checking for 'nic'

A false failure detection may happen if the following conditions are met:
 * the kernel is 2.6.18 or prior
 * two or more processes can read /proc/net/dev at the same time
 * reading the proc file using 'read' of bash (or lseek()) line by line

See this issue for the details:
 https://github.com/ClusterLabs/resource-agents/pull/320
---
 heartbeat/findif.sh | 49 +++++++++++++------------------------------------
 1 file changed, 13 insertions(+), 36 deletions(-)

diff --git a/heartbeat/findif.sh b/heartbeat/findif.sh
index 98649bf..ffce416 100644
--- a/heartbeat/findif.sh
+++ b/heartbeat/findif.sh
@@ -8,28 +8,9 @@ ipcheck_ipv4() {
 ipcheck_ipv6() {
   ! echo "$1" | grep -qs "[^0-9:a-fA-F]"
 }
-ifcheck_ipv4() {
-  local ifcheck=$1
-  local procfile="/proc/net/dev"
-  local ifstr rest
-
-  while read ifstr rest ; do
-    # Interface name may be concatenated to Receive field with ':'
-    case "$ifstr" in
-      "$ifcheck:"*) return 0;;
-    esac
-  done < $procfile
-  return 1
-}
-ifcheck_ipv6() {
-  local ifcheck="$1"
-  local procfile="/proc/net/if_inet6"
-  local tmp ifstr
-
-  while read tmp tmp tmp tmp tmp ifstr ; do
-    [ "$ifstr" = "$ifcheck" ] && return 0
-  done < $procfile
-  return 1
+ifcheck() {
+  local ifname="$1"
+  $IP2UTIL link show dev $ifname 2>&1 >/dev/null
 }
 prefixcheck() {
   local prefix=$1
@@ -71,6 +52,15 @@ findif_check_params()
   local nic="$OCF_RESKEY_nic"
   local netmask="$OCF_RESKEY_cidr_netmask"
   local brdcast="$OCF_RESKEY_broadcast"
+  local errmsg
+
+  if [ -n "$nic" ] ; then
+    errmsg=`ifcheck $nic`
+    if [ $? -ne 0 ] ; then
+      ocf_log err "Invalid interface name [$nic]: $errmsg"
+      return $OCF_ERR_CONFIGURED
+    fi
+  fi
 
   if [ "$family" = "inet6" ] ; then
     ipcheck_ipv6 $match
@@ -78,13 +68,7 @@ findif_check_params()
       ocf_log err "IP address [$match] not valid."
       return $OCF_ERR_CONFIGURED
     fi
-    if [ -n "$nic" ] ; then
-      ifcheck_ipv6 $nic
-      if [ $? = 1 ] ; then
-        ocf_log err "Unknown interface [$nic] No such device."
-        return $OCF_ERR_CONFIGURED
-      fi
-    else
+    if [ -z "$nic" ] ; then
       echo $match | grep -qis '^fe80::'
       if [ $? = 0 ] ; then
         ocf_log err "'nic' parameter is mandatory for a link local address [$match]."
@@ -105,13 +89,6 @@ findif_check_params()
       ocf_log err "IP address [$match] not valid."
       return $OCF_ERR_CONFIGURED
     fi
-    if [ -n "$nic" ] ; then
-      ifcheck_ipv4 $nic
-      if [ $? = 1 ] ; then
-        ocf_log err "Unknown interface [$nic] No such device."
-        return $OCF_ERR_CONFIGURED
-      fi
-    fi
     if [ -n "$netmask" ] ; then
       prefixcheck $netmask 32
       if [ $? = 1 ] ; then
-- 
1.8.4.2

